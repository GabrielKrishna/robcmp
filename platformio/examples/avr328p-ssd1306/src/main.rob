/*
 * Robcmp examples: SSD1306 SPI
 */
use arch.avr.avr5mcu;
use display.ssd1306spi;
use graphic.canvas8;
use math.random16;
use intfs.mcu;
use intfs.display;
use intfs.databus;

bind avr5mcu to global_instances.mmcu singleton;
bind avr5mcu.spi to global_instances.spi singleton;
bind avr5mcu to ssd1306spi.mmcu singleton;
bind avr5mcu.b0 to ssd1306spi.reset singleton;
bind avr5mcu.b1 to ssd1306spi.datacmd singleton;
bind avr5mcu.b2 to ssd1306spi.select singleton;
bind avr5mcu.spi to ssd1306spi.spi singleton;
bind ssd1306spi to global_instances.oled singleton;
bind ssd1306spi.framebuffer to canvas8.buffer singleton;

// for now, the binding only works inside a type
type global_instances {
	mmcu = mcu();
	spi = databus();
	oled = display();
}

int16 main() {

	gi = global_instances();
	mmcu = gi.mmcu;
	spi = gi.spi;
	oled = gi.oled;
	canvas = canvas8();
		
	spi.setup(0);
	spi.enable();
	oled.init_display();
	oled.set_orientation(displayorientation.UPSIDE_DOWN);

	/*ball = {0b00000000,
			0b00011000,
			0b00111100,
			0b01111110,
			0b11111111,
			0b01111110,
			0b00111100,
			0b00011000};*/

	col = 0u;
	row = 0u;

	loop {
		canvas.clear_pixel(row, col);
		canvas.clear_pixel(row+1, col);
		canvas.clear_pixel(row+1, col+1);
		canvas.clear_pixel(row, col+1);

		col++;
		row++;

        if col == canvas.width()-1 {
            col = random16ub(canvas.width()-1);
			row = random16ub(canvas.height()-1);
        } 
		if row == canvas.height()-1 {
            row = random16ub(canvas.height()-1);
        }

		canvas.set_pixel(row, col);
		canvas.set_pixel(row+1, col);
		canvas.set_pixel(row+1, col+1);
		canvas.set_pixel(row, col+1);

		oled.update_frame();
	}
}
