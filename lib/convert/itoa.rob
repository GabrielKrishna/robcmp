/*
 * Part of the Robotics Language Standard Library, under the
 * Apache License v2.0.
 */

const itoa_chars = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};

void itoa(int16 value, int8 base, char[] result) {
    if base < 2 or base > 16 {
        result[0] = 0;
        return;
    }

    negative = value < 0;
    //abs without branch
    mask = value >> 15;
    value = (value ^ mask) - mask;
    
    i = 0;
    if value == 0 {
        result[i] = '0';
        i++;
    } else {
        while value != 0 {
            temp = value;
            value /= base;
            result[i] = itoa_chars[temp - value * base];
            //result[i] = itoa_chars[value % base];
            //value /= base;
            i++;
        }
        if negative {
            result[i] = '-';
            i++;
        }
    }

    result[i] = 0;
    
    // reverse result
    j = 0;
    i--;
    while j < i {
        temp = result[j];
        result[j] = result[i];
        result[i] = temp;
        j++;
        i--;
    }
}
