Terminals unused in grammar

   TOK_FUNCTION
   TOK_FOR
   TOK_FCHAR
   TOK_FUNSIGNED
   EQ_OP
   NE_OP
   GE_OP
   LE_OP
   GT_OP
   LT_OP


Grammar

    0 $accept: programa $end

    1 programa: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 fe: funcblock
    5   | eventblock

    6 stmt: TOK_OUT '=' expr ';'
    7     | TOK_IDENTIFIER '=' expr ';'
    8     | TOK_IDENTIFIER '+' '+' ';'
    9     | TOK_IDENTIFIER '+' '=' expr ';'
   10     | TOK_IDENTIFIER '-' '=' expr ';'
   11     | TOK_IDENTIFIER '*' '=' expr ';'
   12     | TOK_IDENTIFIER '=' relements ';'
   13     | TOK_IDENTIFIER '=' rmatrix ';'
   14     | TOK_DELAY expr ';'
   15     | condblock
   16     | whileblock
   17     | fe
   18     | returnblock ';'
   19     | printstmt ';'
   20     | TOK_STEPPER expr ';'
   21     | TOK_SERVO expr ';'
   22     | error ';'

   23 rmatrix: '{' matrix '}'

   24 matrix: matrix ',' melement
   25       | melement

   26 melement: relements ':' TOK_INTEGER
   27         | relements

   28 relements: '{' elements '}'

   29 elements: elements ',' element
   30         | element

   31 element: factor ':' TOK_INTEGER
   32        | factor

   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}'

   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}'

   35 funcparams: funcparams ',' funcparam
   36           | funcparam
   37           | %empty

   38 funcparam: type_f TOK_IDENTIFIER

   39 type_f: TOK_FBOOL
   40       | TOK_FSHORT TOK_FINT
   41       | TOK_FINT
   42       | TOK_FLONG TOK_FINT
   43       | TOK_FLONG TOK_FLONG TOK_FINT
   44       | TOK_FLONG TOK_FLONG TOK_FLONG TOK_FINT
   45       | TOK_FSHORT TOK_FFLOAT
   46       | TOK_FFLOAT
   47       | TOK_FDOUBLE
   48       | TOK_FDOUBLE TOK_FDOUBLE

   49 paramscall: paramscall ',' expr
   50           | expr
   51           | %empty

   52 returnblock: TOK_RETURN expr
   53            | TOK_RETURN logicexpr

   54 condblock: TOK_IF '(' logicexpr ')' stmt
   55          | TOK_IF '(' logicexpr ')' stmt elseblock
   56          | TOK_IF '(' logicexpr ')' '{' stmts '}'
   57          | TOK_IF '(' logicexpr ')' '{' stmts '}' elseblock

   58 elseblock: TOK_ELSE stmt
   59          | TOK_ELSE '{' stmts '}'

   60 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts '}'

   61 logicexpr: logicexpr TOK_OR logicterm
   62          | logicterm

   63 logicterm: logicterm TOK_AND logicfactor
   64          | logicfactor

   65 logicfactor: '(' logicexpr ')'
   66            | expr '=' '=' expr
   67            | expr '!' '=' expr
   68            | expr '<' '=' expr
   69            | expr '>' '=' expr
   70            | expr '<' expr
   71            | expr '>' expr

   72 expr: expr '+' term
   73     | expr '-' term
   74     | term

   75 term: term '*' factor
   76     | term '/' factor
   77     | term '%' factor
   78     | factor

   79 factor: '(' expr ')'
   80       | TOK_IDENTIFIER
   81       | TOK_IDENTIFIER '[' expr ']'
   82       | TOK_IDENTIFIER '[' expr ']' '[' expr ']'
   83       | TOK_TRUE
   84       | TOK_FALSE
   85       | TOK_INTEGER
   86       | TOK_FLOAT
   87       | '(' TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   88       | '(' TOK_FLONG TOK_FINT ')' TOK_INTEGER
   89       | '(' TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   90       | '(' TOK_FFLOAT ')' TOK_FLOAT
   91       | '(' TOK_FDOUBLE ')' TOK_FLOAT
   92       | TOK_IN
   93       | TOK_IDENTIFIER '(' paramscall ')'

   94 printstmt: TOK_PRINT TOK_STRING
   95          | TOK_PRINT expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 67
'%' (37) 77
'(' (40) 34 54 55 56 57 60 65 79 87 88 89 90 91 93
')' (41) 34 54 55 56 57 60 65 79 87 88 89 90 91 93
'*' (42) 11 75
'+' (43) 8 9 72
',' (44) 24 29 35 49
'-' (45) 10 73
'/' (47) 76
':' (58) 26 31
';' (59) 6 7 8 9 10 11 12 13 14 18 19 20 21 22
'<' (60) 68 70
'=' (61) 6 7 9 10 11 12 13 66 67 68 69
'>' (62) 69 71
'[' (91) 81 82
']' (93) 81 82
'{' (123) 23 28 33 34 56 57 59 60
'}' (125) 23 28 33 34 56 57 59 60
error (256) 22
TOK_FUNCTION (258)
TOK_RETURN (259) 52 53
TOK_IF (260) 54 55 56 57
TOK_ELSE (261) 58 59
TOK_FOR (262)
TOK_WHILE (263) 60
TOK_PRINT (264) 94 95
TOK_IN (265) 92
TOK_OUT (266) 6
TOK_STEPPER (267) 20
TOK_SERVO (268) 21
TOK_DELAY (269) 14
TOK_AND (270) 63
TOK_OR (271) 61
TOK_IDENTIFIER (272) 7 8 9 10 11 12 13 34 38 80 81 82 93
TOK_FLOAT (273) 86 90 91
TOK_INTEGER (274) 26 31 33 85 87 88 89
TOK_STRING (275) 94
TOK_TRUE (276) 83
TOK_FALSE (277) 84
TOK_FINT (278) 40 41 42 43 44 87 88 89
TOK_FFLOAT (279) 45 46 90
TOK_FDOUBLE (280) 47 48 91
TOK_FCHAR (281)
TOK_FLONG (282) 42 43 44 88 89
TOK_FSHORT (283) 40 45 87
TOK_FUNSIGNED (284)
TOK_FBOOL (285) 39
TOK_QUANDO (286) 33
TOK_ESTA (287) 33
EQ_OP (288)
NE_OP (289)
GE_OP (290)
LE_OP (291)
GT_OP (292)
LT_OP (293)
IFX (294)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
programa (59)
    on left: 1, on right: 0
stmts (60)
    on left: 2 3, on right: 1 2 33 34 56 57 59 60
fe (61)
    on left: 4 5, on right: 17
stmt (62)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22, on right:
    2 3 54 55 58
rmatrix (63)
    on left: 23, on right: 13
matrix (64)
    on left: 24 25, on right: 23 24
melement (65)
    on left: 26 27, on right: 24 25
relements (66)
    on left: 28, on right: 12 26 27
elements (67)
    on left: 29 30, on right: 28 29
element (68)
    on left: 31 32, on right: 29 30
eventblock (69)
    on left: 33, on right: 5
funcblock (70)
    on left: 34, on right: 4
funcparams (71)
    on left: 35 36 37, on right: 34 35
funcparam (72)
    on left: 38, on right: 35 36
type_f (73)
    on left: 39 40 41 42 43 44 45 46 47 48, on right: 34 38
paramscall (74)
    on left: 49 50 51, on right: 49 93
returnblock (75)
    on left: 52 53, on right: 18
condblock (76)
    on left: 54 55 56 57, on right: 15
elseblock (77)
    on left: 58 59, on right: 55 57
whileblock (78)
    on left: 60, on right: 16
logicexpr (79)
    on left: 61 62, on right: 53 54 55 56 57 60 61 65
logicterm (80)
    on left: 63 64, on right: 61 62 63
logicfactor (81)
    on left: 65 66 67 68 69 70 71, on right: 63 64
expr (82)
    on left: 72 73 74, on right: 6 7 9 10 11 14 20 21 49 50 52 66 67
    68 69 70 71 72 73 79 81 82 95
term (83)
    on left: 75 76 77 78, on right: 72 73 74 75 76 77
factor (84)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93, on right:
    31 32 75 76 77 78
printstmt (85)
    on left: 94 95, on right: 19


State 0

    0 $accept: . programa $end

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    programa     go to state 18
    stmts        go to state 19
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 1

   22 stmt: error . ';'

    ';'  shift, and go to state 29


State 2

   52 returnblock: TOK_RETURN . expr
   53            | TOK_RETURN . logicexpr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 36

    logicexpr    go to state 37
    logicterm    go to state 38
    logicfactor  go to state 39
    expr         go to state 40
    term         go to state 41
    factor       go to state 42


State 3

   54 condblock: TOK_IF . '(' logicexpr ')' stmt
   55          | TOK_IF . '(' logicexpr ')' stmt elseblock
   56          | TOK_IF . '(' logicexpr ')' '{' stmts '}'
   57          | TOK_IF . '(' logicexpr ')' '{' stmts '}' elseblock

    '('  shift, and go to state 43


State 4

   60 whileblock: TOK_WHILE . '(' logicexpr ')' '{' stmts '}'

    '('  shift, and go to state 44


State 5

   94 printstmt: TOK_PRINT . TOK_STRING
   95          | TOK_PRINT . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_STRING      shift, and go to state 45
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 47
    term    go to state 41
    factor  go to state 42


State 6

    6 stmt: TOK_OUT . '=' expr ';'

    '='  shift, and go to state 48


State 7

   20 stmt: TOK_STEPPER . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 49
    term    go to state 41
    factor  go to state 42


State 8

   21 stmt: TOK_SERVO . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 50
    term    go to state 41
    factor  go to state 42


State 9

   14 stmt: TOK_DELAY . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 51
    term    go to state 41
    factor  go to state 42


State 10

    7 stmt: TOK_IDENTIFIER . '=' expr ';'
    8     | TOK_IDENTIFIER . '+' '+' ';'
    9     | TOK_IDENTIFIER . '+' '=' expr ';'
   10     | TOK_IDENTIFIER . '-' '=' expr ';'
   11     | TOK_IDENTIFIER . '*' '=' expr ';'
   12     | TOK_IDENTIFIER . '=' relements ';'
   13     | TOK_IDENTIFIER . '=' rmatrix ';'

    '='  shift, and go to state 52
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55


State 11

   41 type_f: TOK_FINT .

    $default  reduce using rule 41 (type_f)


State 12

   46 type_f: TOK_FFLOAT .

    $default  reduce using rule 46 (type_f)


State 13

   47 type_f: TOK_FDOUBLE .
   48       | TOK_FDOUBLE . TOK_FDOUBLE

    TOK_FDOUBLE  shift, and go to state 56

    $default  reduce using rule 47 (type_f)


State 14

   42 type_f: TOK_FLONG . TOK_FINT
   43       | TOK_FLONG . TOK_FLONG TOK_FINT
   44       | TOK_FLONG . TOK_FLONG TOK_FLONG TOK_FINT

    TOK_FINT   shift, and go to state 57
    TOK_FLONG  shift, and go to state 58


State 15

   40 type_f: TOK_FSHORT . TOK_FINT
   45       | TOK_FSHORT . TOK_FFLOAT

    TOK_FINT    shift, and go to state 59
    TOK_FFLOAT  shift, and go to state 60


State 16

   39 type_f: TOK_FBOOL .

    $default  reduce using rule 39 (type_f)


State 17

   33 eventblock: TOK_QUANDO . TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}'

    TOK_INTEGER  shift, and go to state 61


State 18

    0 $accept: programa . $end

    $end  shift, and go to state 62


State 19

    1 programa: stmts .
    2 stmts: stmts . stmt

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    $end  reduce using rule 1 (programa)

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 20

   17 stmt: fe .

    $default  reduce using rule 17 (stmt)


State 21

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


State 22

    5 fe: eventblock .

    $default  reduce using rule 5 (fe)


State 23

    4 fe: funcblock .

    $default  reduce using rule 4 (fe)


State 24

   34 funcblock: type_f . TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}'

    TOK_IDENTIFIER  shift, and go to state 64


State 25

   18 stmt: returnblock . ';'

    ';'  shift, and go to state 65


State 26

   15 stmt: condblock .

    $default  reduce using rule 15 (stmt)


State 27

   16 stmt: whileblock .

    $default  reduce using rule 16 (stmt)


State 28

   19 stmt: printstmt . ';'

    ';'  shift, and go to state 66


State 29

   22 stmt: error ';' .

    $default  reduce using rule 22 (stmt)


State 30

   92 factor: TOK_IN .

    $default  reduce using rule 92 (factor)


State 31

   80 factor: TOK_IDENTIFIER .
   81       | TOK_IDENTIFIER . '[' expr ']'
   82       | TOK_IDENTIFIER . '[' expr ']' '[' expr ']'
   93       | TOK_IDENTIFIER . '(' paramscall ')'

    '('  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 80 (factor)


State 32

   86 factor: TOK_FLOAT .

    $default  reduce using rule 86 (factor)


State 33

   85 factor: TOK_INTEGER .

    $default  reduce using rule 85 (factor)


State 34

   83 factor: TOK_TRUE .

    $default  reduce using rule 83 (factor)


State 35

   84 factor: TOK_FALSE .

    $default  reduce using rule 84 (factor)


State 36

   65 logicfactor: '(' . logicexpr ')'
   79 factor: '(' . expr ')'
   87       | '(' . TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   88       | '(' . TOK_FLONG TOK_FINT ')' TOK_INTEGER
   89       | '(' . TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   90       | '(' . TOK_FFLOAT ')' TOK_FLOAT
   91       | '(' . TOK_FDOUBLE ')' TOK_FLOAT

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    TOK_FFLOAT      shift, and go to state 69
    TOK_FDOUBLE     shift, and go to state 70
    TOK_FLONG       shift, and go to state 71
    TOK_FSHORT      shift, and go to state 72
    '('             shift, and go to state 36

    logicexpr    go to state 73
    logicterm    go to state 38
    logicfactor  go to state 39
    expr         go to state 74
    term         go to state 41
    factor       go to state 42


State 37

   53 returnblock: TOK_RETURN logicexpr .
   61 logicexpr: logicexpr . TOK_OR logicterm

    TOK_OR  shift, and go to state 75

    $default  reduce using rule 53 (returnblock)


State 38

   62 logicexpr: logicterm .
   63 logicterm: logicterm . TOK_AND logicfactor

    TOK_AND  shift, and go to state 76

    $default  reduce using rule 62 (logicexpr)


State 39

   64 logicterm: logicfactor .

    $default  reduce using rule 64 (logicterm)


State 40

   52 returnblock: TOK_RETURN expr .
   66 logicfactor: expr . '=' '=' expr
   67            | expr . '!' '=' expr
   68            | expr . '<' '=' expr
   69            | expr . '>' '=' expr
   70            | expr . '<' expr
   71            | expr . '>' expr
   72 expr: expr . '+' term
   73     | expr . '-' term

    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '!'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82

    $default  reduce using rule 52 (returnblock)


State 41

   74 expr: term .
   75 term: term . '*' factor
   76     | term . '/' factor
   77     | term . '%' factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 74 (expr)


State 42

   78 term: factor .

    $default  reduce using rule 78 (term)


State 43

   54 condblock: TOK_IF '(' . logicexpr ')' stmt
   55          | TOK_IF '(' . logicexpr ')' stmt elseblock
   56          | TOK_IF '(' . logicexpr ')' '{' stmts '}'
   57          | TOK_IF '(' . logicexpr ')' '{' stmts '}' elseblock

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 36

    logicexpr    go to state 86
    logicterm    go to state 38
    logicfactor  go to state 39
    expr         go to state 87
    term         go to state 41
    factor       go to state 42


State 44

   60 whileblock: TOK_WHILE '(' . logicexpr ')' '{' stmts '}'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 36

    logicexpr    go to state 88
    logicterm    go to state 38
    logicfactor  go to state 39
    expr         go to state 87
    term         go to state 41
    factor       go to state 42


State 45

   94 printstmt: TOK_PRINT TOK_STRING .

    $default  reduce using rule 94 (printstmt)


State 46

   79 factor: '(' . expr ')'
   87       | '(' . TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   88       | '(' . TOK_FLONG TOK_FINT ')' TOK_INTEGER
   89       | '(' . TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   90       | '(' . TOK_FFLOAT ')' TOK_FLOAT
   91       | '(' . TOK_FDOUBLE ')' TOK_FLOAT

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    TOK_FFLOAT      shift, and go to state 69
    TOK_FDOUBLE     shift, and go to state 70
    TOK_FLONG       shift, and go to state 71
    TOK_FSHORT      shift, and go to state 72
    '('             shift, and go to state 46

    expr    go to state 89
    term    go to state 41
    factor  go to state 42


State 47

   72 expr: expr . '+' term
   73     | expr . '-' term
   95 printstmt: TOK_PRINT expr .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 95 (printstmt)


State 48

    6 stmt: TOK_OUT '=' . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 90
    term    go to state 41
    factor  go to state 42


State 49

   20 stmt: TOK_STEPPER expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 91
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 50

   21 stmt: TOK_SERVO expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 92
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 51

   14 stmt: TOK_DELAY expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 93
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 52

    7 stmt: TOK_IDENTIFIER '=' . expr ';'
   12     | TOK_IDENTIFIER '=' . relements ';'
   13     | TOK_IDENTIFIER '=' . rmatrix ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '{'             shift, and go to state 94
    '('             shift, and go to state 46

    rmatrix    go to state 95
    relements  go to state 96
    expr       go to state 97
    term       go to state 41
    factor     go to state 42


State 53

    8 stmt: TOK_IDENTIFIER '+' . '+' ';'
    9     | TOK_IDENTIFIER '+' . '=' expr ';'

    '='  shift, and go to state 98
    '+'  shift, and go to state 99


State 54

   10 stmt: TOK_IDENTIFIER '-' . '=' expr ';'

    '='  shift, and go to state 100


State 55

   11 stmt: TOK_IDENTIFIER '*' . '=' expr ';'

    '='  shift, and go to state 101


State 56

   48 type_f: TOK_FDOUBLE TOK_FDOUBLE .

    $default  reduce using rule 48 (type_f)


State 57

   42 type_f: TOK_FLONG TOK_FINT .

    $default  reduce using rule 42 (type_f)


State 58

   43 type_f: TOK_FLONG TOK_FLONG . TOK_FINT
   44       | TOK_FLONG TOK_FLONG . TOK_FLONG TOK_FINT

    TOK_FINT   shift, and go to state 102
    TOK_FLONG  shift, and go to state 103


State 59

   40 type_f: TOK_FSHORT TOK_FINT .

    $default  reduce using rule 40 (type_f)


State 60

   45 type_f: TOK_FSHORT TOK_FFLOAT .

    $default  reduce using rule 45 (type_f)


State 61

   33 eventblock: TOK_QUANDO TOK_INTEGER . TOK_ESTA TOK_INTEGER '{' stmts '}'

    TOK_ESTA  shift, and go to state 104


State 62

    0 $accept: programa $end .

    $default  accept


State 63

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


State 64

   34 funcblock: type_f TOK_IDENTIFIER . '(' funcparams ')' '{' stmts '}'

    '('  shift, and go to state 105


State 65

   18 stmt: returnblock ';' .

    $default  reduce using rule 18 (stmt)


State 66

   19 stmt: printstmt ';' .

    $default  reduce using rule 19 (stmt)


State 67

   93 factor: TOK_IDENTIFIER '(' . paramscall ')'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    $default  reduce using rule 51 (paramscall)

    paramscall  go to state 106
    expr        go to state 107
    term        go to state 41
    factor      go to state 42


State 68

   81 factor: TOK_IDENTIFIER '[' . expr ']'
   82       | TOK_IDENTIFIER '[' . expr ']' '[' expr ']'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 108
    term    go to state 41
    factor  go to state 42


State 69

   90 factor: '(' TOK_FFLOAT . ')' TOK_FLOAT

    ')'  shift, and go to state 109


State 70

   91 factor: '(' TOK_FDOUBLE . ')' TOK_FLOAT

    ')'  shift, and go to state 110


State 71

   88 factor: '(' TOK_FLONG . TOK_FINT ')' TOK_INTEGER
   89       | '(' TOK_FLONG . TOK_FLONG TOK_FINT ')' TOK_INTEGER

    TOK_FINT   shift, and go to state 111
    TOK_FLONG  shift, and go to state 112


State 72

   87 factor: '(' TOK_FSHORT . TOK_FINT ')' TOK_INTEGER

    TOK_FINT  shift, and go to state 113


State 73

   61 logicexpr: logicexpr . TOK_OR logicterm
   65 logicfactor: '(' logicexpr . ')'

    TOK_OR  shift, and go to state 75
    ')'     shift, and go to state 114


State 74

   66 logicfactor: expr . '=' '=' expr
   67            | expr . '!' '=' expr
   68            | expr . '<' '=' expr
   69            | expr . '>' '=' expr
   70            | expr . '<' expr
   71            | expr . '>' expr
   72 expr: expr . '+' term
   73     | expr . '-' term
   79 factor: '(' expr . ')'

    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 115
    '!'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82


State 75

   61 logicexpr: logicexpr TOK_OR . logicterm

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 36

    logicterm    go to state 116
    logicfactor  go to state 39
    expr         go to state 87
    term         go to state 41
    factor       go to state 42


State 76

   63 logicterm: logicterm TOK_AND . logicfactor

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 36

    logicfactor  go to state 117
    expr         go to state 87
    term         go to state 41
    factor       go to state 42


State 77

   66 logicfactor: expr '=' . '=' expr

    '='  shift, and go to state 118


State 78

   72 expr: expr '+' . term

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    term    go to state 119
    factor  go to state 42


State 79

   73 expr: expr '-' . term

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    term    go to state 120
    factor  go to state 42


State 80

   67 logicfactor: expr '!' . '=' expr

    '='  shift, and go to state 121


State 81

   68 logicfactor: expr '<' . '=' expr
   70            | expr '<' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '='             shift, and go to state 122
    '('             shift, and go to state 46

    expr    go to state 123
    term    go to state 41
    factor  go to state 42


State 82

   69 logicfactor: expr '>' . '=' expr
   71            | expr '>' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '='             shift, and go to state 124
    '('             shift, and go to state 46

    expr    go to state 125
    term    go to state 41
    factor  go to state 42


State 83

   75 term: term '*' . factor

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    factor  go to state 126


State 84

   76 term: term '/' . factor

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    factor  go to state 127


State 85

   77 term: term '%' . factor

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    factor  go to state 128


State 86

   54 condblock: TOK_IF '(' logicexpr . ')' stmt
   55          | TOK_IF '(' logicexpr . ')' stmt elseblock
   56          | TOK_IF '(' logicexpr . ')' '{' stmts '}'
   57          | TOK_IF '(' logicexpr . ')' '{' stmts '}' elseblock
   61 logicexpr: logicexpr . TOK_OR logicterm

    TOK_OR  shift, and go to state 75
    ')'     shift, and go to state 129


State 87

   66 logicfactor: expr . '=' '=' expr
   67            | expr . '!' '=' expr
   68            | expr . '<' '=' expr
   69            | expr . '>' '=' expr
   70            | expr . '<' expr
   71            | expr . '>' expr
   72 expr: expr . '+' term
   73     | expr . '-' term

    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '!'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82


State 88

   60 whileblock: TOK_WHILE '(' logicexpr . ')' '{' stmts '}'
   61 logicexpr: logicexpr . TOK_OR logicterm

    TOK_OR  shift, and go to state 75
    ')'     shift, and go to state 130


State 89

   72 expr: expr . '+' term
   73     | expr . '-' term
   79 factor: '(' expr . ')'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 115


State 90

    6 stmt: TOK_OUT '=' expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 131
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 91

   20 stmt: TOK_STEPPER expr ';' .

    $default  reduce using rule 20 (stmt)


State 92

   21 stmt: TOK_SERVO expr ';' .

    $default  reduce using rule 21 (stmt)


State 93

   14 stmt: TOK_DELAY expr ';' .

    $default  reduce using rule 14 (stmt)


State 94

   23 rmatrix: '{' . matrix '}'
   28 relements: '{' . elements '}'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '{'             shift, and go to state 132
    '('             shift, and go to state 46

    matrix     go to state 133
    melement   go to state 134
    relements  go to state 135
    elements   go to state 136
    element    go to state 137
    factor     go to state 138


State 95

   13 stmt: TOK_IDENTIFIER '=' rmatrix . ';'

    ';'  shift, and go to state 139


State 96

   12 stmt: TOK_IDENTIFIER '=' relements . ';'

    ';'  shift, and go to state 140


State 97

    7 stmt: TOK_IDENTIFIER '=' expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 141
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 98

    9 stmt: TOK_IDENTIFIER '+' '=' . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 142
    term    go to state 41
    factor  go to state 42


State 99

    8 stmt: TOK_IDENTIFIER '+' '+' . ';'

    ';'  shift, and go to state 143


State 100

   10 stmt: TOK_IDENTIFIER '-' '=' . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 144
    term    go to state 41
    factor  go to state 42


State 101

   11 stmt: TOK_IDENTIFIER '*' '=' . expr ';'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 145
    term    go to state 41
    factor  go to state 42


State 102

   43 type_f: TOK_FLONG TOK_FLONG TOK_FINT .

    $default  reduce using rule 43 (type_f)


State 103

   44 type_f: TOK_FLONG TOK_FLONG TOK_FLONG . TOK_FINT

    TOK_FINT  shift, and go to state 146


State 104

   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA . TOK_INTEGER '{' stmts '}'

    TOK_INTEGER  shift, and go to state 147


State 105

   34 funcblock: type_f TOK_IDENTIFIER '(' . funcparams ')' '{' stmts '}'

    TOK_FINT     shift, and go to state 11
    TOK_FFLOAT   shift, and go to state 12
    TOK_FDOUBLE  shift, and go to state 13
    TOK_FLONG    shift, and go to state 14
    TOK_FSHORT   shift, and go to state 15
    TOK_FBOOL    shift, and go to state 16

    $default  reduce using rule 37 (funcparams)

    funcparams  go to state 148
    funcparam   go to state 149
    type_f      go to state 150


State 106

   49 paramscall: paramscall . ',' expr
   93 factor: TOK_IDENTIFIER '(' paramscall . ')'

    ','  shift, and go to state 151
    ')'  shift, and go to state 152


State 107

   50 paramscall: expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 50 (paramscall)


State 108

   72 expr: expr . '+' term
   73     | expr . '-' term
   81 factor: TOK_IDENTIFIER '[' expr . ']'
   82       | TOK_IDENTIFIER '[' expr . ']' '[' expr ']'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ']'  shift, and go to state 153


State 109

   90 factor: '(' TOK_FFLOAT ')' . TOK_FLOAT

    TOK_FLOAT  shift, and go to state 154


State 110

   91 factor: '(' TOK_FDOUBLE ')' . TOK_FLOAT

    TOK_FLOAT  shift, and go to state 155


State 111

   88 factor: '(' TOK_FLONG TOK_FINT . ')' TOK_INTEGER

    ')'  shift, and go to state 156


State 112

   89 factor: '(' TOK_FLONG TOK_FLONG . TOK_FINT ')' TOK_INTEGER

    TOK_FINT  shift, and go to state 157


State 113

   87 factor: '(' TOK_FSHORT TOK_FINT . ')' TOK_INTEGER

    ')'  shift, and go to state 158


State 114

   65 logicfactor: '(' logicexpr ')' .

    $default  reduce using rule 65 (logicfactor)


State 115

   79 factor: '(' expr ')' .

    $default  reduce using rule 79 (factor)


State 116

   61 logicexpr: logicexpr TOK_OR logicterm .
   63 logicterm: logicterm . TOK_AND logicfactor

    TOK_AND  shift, and go to state 76

    $default  reduce using rule 61 (logicexpr)


State 117

   63 logicterm: logicterm TOK_AND logicfactor .

    $default  reduce using rule 63 (logicterm)


State 118

   66 logicfactor: expr '=' '=' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 159
    term    go to state 41
    factor  go to state 42


State 119

   72 expr: expr '+' term .
   75 term: term . '*' factor
   76     | term . '/' factor
   77     | term . '%' factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 72 (expr)


State 120

   73 expr: expr '-' term .
   75 term: term . '*' factor
   76     | term . '/' factor
   77     | term . '%' factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 73 (expr)


State 121

   67 logicfactor: expr '!' '=' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 160
    term    go to state 41
    factor  go to state 42


State 122

   68 logicfactor: expr '<' '=' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 161
    term    go to state 41
    factor  go to state 42


State 123

   70 logicfactor: expr '<' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 70 (logicfactor)


State 124

   69 logicfactor: expr '>' '=' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 162
    term    go to state 41
    factor  go to state 42


State 125

   71 logicfactor: expr '>' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 71 (logicfactor)


State 126

   75 term: term '*' factor .

    $default  reduce using rule 75 (term)


State 127

   76 term: term '/' factor .

    $default  reduce using rule 76 (term)


State 128

   77 term: term '%' factor .

    $default  reduce using rule 77 (term)


State 129

   54 condblock: TOK_IF '(' logicexpr ')' . stmt
   55          | TOK_IF '(' logicexpr ')' . stmt elseblock
   56          | TOK_IF '(' logicexpr ')' . '{' stmts '}'
   57          | TOK_IF '(' logicexpr ')' . '{' stmts '}' elseblock

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '{'             shift, and go to state 163

    fe           go to state 20
    stmt         go to state 164
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 130

   60 whileblock: TOK_WHILE '(' logicexpr ')' . '{' stmts '}'

    '{'  shift, and go to state 165


State 131

    6 stmt: TOK_OUT '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 132

   28 relements: '{' . elements '}'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    elements  go to state 136
    element   go to state 137
    factor    go to state 138


State 133

   23 rmatrix: '{' matrix . '}'
   24 matrix: matrix . ',' melement

    '}'  shift, and go to state 166
    ','  shift, and go to state 167


State 134

   25 matrix: melement .

    $default  reduce using rule 25 (matrix)


State 135

   26 melement: relements . ':' TOK_INTEGER
   27         | relements .

    ':'  shift, and go to state 168

    $default  reduce using rule 27 (melement)


State 136

   28 relements: '{' elements . '}'
   29 elements: elements . ',' element

    '}'  shift, and go to state 169
    ','  shift, and go to state 170


State 137

   30 elements: element .

    $default  reduce using rule 30 (elements)


State 138

   31 element: factor . ':' TOK_INTEGER
   32        | factor .

    ':'  shift, and go to state 171

    $default  reduce using rule 32 (element)


State 139

   13 stmt: TOK_IDENTIFIER '=' rmatrix ';' .

    $default  reduce using rule 13 (stmt)


State 140

   12 stmt: TOK_IDENTIFIER '=' relements ';' .

    $default  reduce using rule 12 (stmt)


State 141

    7 stmt: TOK_IDENTIFIER '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 142

    9 stmt: TOK_IDENTIFIER '+' '=' expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 172
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 143

    8 stmt: TOK_IDENTIFIER '+' '+' ';' .

    $default  reduce using rule 8 (stmt)


State 144

   10 stmt: TOK_IDENTIFIER '-' '=' expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 173
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 145

   11 stmt: TOK_IDENTIFIER '*' '=' expr . ';'
   72 expr: expr . '+' term
   73     | expr . '-' term

    ';'  shift, and go to state 174
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79


State 146

   44 type_f: TOK_FLONG TOK_FLONG TOK_FLONG TOK_FINT .

    $default  reduce using rule 44 (type_f)


State 147

   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER . '{' stmts '}'

    '{'  shift, and go to state 175


State 148

   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams . ')' '{' stmts '}'
   35 funcparams: funcparams . ',' funcparam

    ','  shift, and go to state 176
    ')'  shift, and go to state 177


State 149

   36 funcparams: funcparam .

    $default  reduce using rule 36 (funcparams)


State 150

   38 funcparam: type_f . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 178


State 151

   49 paramscall: paramscall ',' . expr

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 179
    term    go to state 41
    factor  go to state 42


State 152

   93 factor: TOK_IDENTIFIER '(' paramscall ')' .

    $default  reduce using rule 93 (factor)


State 153

   81 factor: TOK_IDENTIFIER '[' expr ']' .
   82       | TOK_IDENTIFIER '[' expr ']' . '[' expr ']'

    '['  shift, and go to state 180

    $default  reduce using rule 81 (factor)


State 154

   90 factor: '(' TOK_FFLOAT ')' TOK_FLOAT .

    $default  reduce using rule 90 (factor)


State 155

   91 factor: '(' TOK_FDOUBLE ')' TOK_FLOAT .

    $default  reduce using rule 91 (factor)


State 156

   88 factor: '(' TOK_FLONG TOK_FINT ')' . TOK_INTEGER

    TOK_INTEGER  shift, and go to state 181


State 157

   89 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT . ')' TOK_INTEGER

    ')'  shift, and go to state 182


State 158

   87 factor: '(' TOK_FSHORT TOK_FINT ')' . TOK_INTEGER

    TOK_INTEGER  shift, and go to state 183


State 159

   66 logicfactor: expr '=' '=' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 66 (logicfactor)


State 160

   67 logicfactor: expr '!' '=' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 67 (logicfactor)


State 161

   68 logicfactor: expr '<' '=' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 68 (logicfactor)


State 162

   69 logicfactor: expr '>' '=' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 69 (logicfactor)


State 163

   56 condblock: TOK_IF '(' logicexpr ')' '{' . stmts '}'
   57          | TOK_IF '(' logicexpr ')' '{' . stmts '}' elseblock

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    stmts        go to state 184
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 164

   54 condblock: TOK_IF '(' logicexpr ')' stmt .
   55          | TOK_IF '(' logicexpr ')' stmt . elseblock

    TOK_ELSE  shift, and go to state 185

    $default  reduce using rule 54 (condblock)

    elseblock  go to state 186


State 165

   60 whileblock: TOK_WHILE '(' logicexpr ')' '{' . stmts '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    stmts        go to state 187
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 166

   23 rmatrix: '{' matrix '}' .

    $default  reduce using rule 23 (rmatrix)


State 167

   24 matrix: matrix ',' . melement

    '{'  shift, and go to state 132

    melement   go to state 188
    relements  go to state 135


State 168

   26 melement: relements ':' . TOK_INTEGER

    TOK_INTEGER  shift, and go to state 189


State 169

   28 relements: '{' elements '}' .

    $default  reduce using rule 28 (relements)


State 170

   29 elements: elements ',' . element

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    element  go to state 190
    factor   go to state 138


State 171

   31 element: factor ':' . TOK_INTEGER

    TOK_INTEGER  shift, and go to state 191


State 172

    9 stmt: TOK_IDENTIFIER '+' '=' expr ';' .

    $default  reduce using rule 9 (stmt)


State 173

   10 stmt: TOK_IDENTIFIER '-' '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 174

   11 stmt: TOK_IDENTIFIER '*' '=' expr ';' .

    $default  reduce using rule 11 (stmt)


State 175

   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' . stmts '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    stmts        go to state 192
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 176

   35 funcparams: funcparams ',' . funcparam

    TOK_FINT     shift, and go to state 11
    TOK_FFLOAT   shift, and go to state 12
    TOK_FDOUBLE  shift, and go to state 13
    TOK_FLONG    shift, and go to state 14
    TOK_FSHORT   shift, and go to state 15
    TOK_FBOOL    shift, and go to state 16

    funcparam  go to state 193
    type_f     go to state 150


State 177

   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' . '{' stmts '}'

    '{'  shift, and go to state 194


State 178

   38 funcparam: type_f TOK_IDENTIFIER .

    $default  reduce using rule 38 (funcparam)


State 179

   49 paramscall: paramscall ',' expr .
   72 expr: expr . '+' term
   73     | expr . '-' term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 49 (paramscall)


State 180

   82 factor: TOK_IDENTIFIER '[' expr ']' '[' . expr ']'

    TOK_IN          shift, and go to state 30
    TOK_IDENTIFIER  shift, and go to state 31
    TOK_FLOAT       shift, and go to state 32
    TOK_INTEGER     shift, and go to state 33
    TOK_TRUE        shift, and go to state 34
    TOK_FALSE       shift, and go to state 35
    '('             shift, and go to state 46

    expr    go to state 195
    term    go to state 41
    factor  go to state 42


State 181

   88 factor: '(' TOK_FLONG TOK_FINT ')' TOK_INTEGER .

    $default  reduce using rule 88 (factor)


State 182

   89 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT ')' . TOK_INTEGER

    TOK_INTEGER  shift, and go to state 196


State 183

   87 factor: '(' TOK_FSHORT TOK_FINT ')' TOK_INTEGER .

    $default  reduce using rule 87 (factor)


State 184

    2 stmts: stmts . stmt
   56 condblock: TOK_IF '(' logicexpr ')' '{' stmts . '}'
   57          | TOK_IF '(' logicexpr ')' '{' stmts . '}' elseblock

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '}'             shift, and go to state 197

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 185

   58 elseblock: TOK_ELSE . stmt
   59          | TOK_ELSE . '{' stmts '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '{'             shift, and go to state 198

    fe           go to state 20
    stmt         go to state 199
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 186

   55 condblock: TOK_IF '(' logicexpr ')' stmt elseblock .

    $default  reduce using rule 55 (condblock)


State 187

    2 stmts: stmts . stmt
   60 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts . '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '}'             shift, and go to state 200

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 188

   24 matrix: matrix ',' melement .

    $default  reduce using rule 24 (matrix)


State 189

   26 melement: relements ':' TOK_INTEGER .

    $default  reduce using rule 26 (melement)


State 190

   29 elements: elements ',' element .

    $default  reduce using rule 29 (elements)


State 191

   31 element: factor ':' TOK_INTEGER .

    $default  reduce using rule 31 (element)


State 192

    2 stmts: stmts . stmt
   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts . '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '}'             shift, and go to state 201

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 193

   35 funcparams: funcparams ',' funcparam .

    $default  reduce using rule 35 (funcparams)


State 194

   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' . stmts '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    stmts        go to state 202
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 195

   72 expr: expr . '+' term
   73     | expr . '-' term
   82 factor: TOK_IDENTIFIER '[' expr ']' '[' expr . ']'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ']'  shift, and go to state 203


State 196

   89 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER .

    $default  reduce using rule 89 (factor)


State 197

   56 condblock: TOK_IF '(' logicexpr ')' '{' stmts '}' .
   57          | TOK_IF '(' logicexpr ')' '{' stmts '}' . elseblock

    TOK_ELSE  shift, and go to state 185

    $default  reduce using rule 56 (condblock)

    elseblock  go to state 204


State 198

   59 elseblock: TOK_ELSE '{' . stmts '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17

    stmts        go to state 205
    fe           go to state 20
    stmt         go to state 21
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 199

   58 elseblock: TOK_ELSE stmt .

    $default  reduce using rule 58 (elseblock)


State 200

   60 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts '}' .

    $default  reduce using rule 60 (whileblock)


State 201

   33 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}' .

    $default  reduce using rule 33 (eventblock)


State 202

    2 stmts: stmts . stmt
   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts . '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '}'             shift, and go to state 206

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 203

   82 factor: TOK_IDENTIFIER '[' expr ']' '[' expr ']' .

    $default  reduce using rule 82 (factor)


State 204

   57 condblock: TOK_IF '(' logicexpr ')' '{' stmts '}' elseblock .

    $default  reduce using rule 57 (condblock)


State 205

    2 stmts: stmts . stmt
   59 elseblock: TOK_ELSE '{' stmts . '}'

    error           shift, and go to state 1
    TOK_RETURN      shift, and go to state 2
    TOK_IF          shift, and go to state 3
    TOK_WHILE       shift, and go to state 4
    TOK_PRINT       shift, and go to state 5
    TOK_OUT         shift, and go to state 6
    TOK_STEPPER     shift, and go to state 7
    TOK_SERVO       shift, and go to state 8
    TOK_DELAY       shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10
    TOK_FINT        shift, and go to state 11
    TOK_FFLOAT      shift, and go to state 12
    TOK_FDOUBLE     shift, and go to state 13
    TOK_FLONG       shift, and go to state 14
    TOK_FSHORT      shift, and go to state 15
    TOK_FBOOL       shift, and go to state 16
    TOK_QUANDO      shift, and go to state 17
    '}'             shift, and go to state 207

    fe           go to state 20
    stmt         go to state 63
    eventblock   go to state 22
    funcblock    go to state 23
    type_f       go to state 24
    returnblock  go to state 25
    condblock    go to state 26
    whileblock   go to state 27
    printstmt    go to state 28


State 206

   34 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}' .

    $default  reduce using rule 34 (funcblock)


State 207

   59 elseblock: TOK_ELSE '{' stmts '}' .

    $default  reduce using rule 59 (elseblock)
